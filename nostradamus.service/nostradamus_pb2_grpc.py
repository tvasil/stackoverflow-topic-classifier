# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import nostradamus_pb2 as nostradamus__pb2


class TopicLabelerStub(object):
    """The TopicLabeler service definition."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Predict = channel.unary_unary(
            "/nostradamus.TopicLabeler/Predict",
            request_serializer=nostradamus__pb2.TopicLabelRequest.SerializeToString,
            response_deserializer=nostradamus__pb2.TopicLabelReply.FromString,
        )


class TopicLabelerServicer(object):
    """The TopicLabeler service definition."""

    def Predict(self, request, context):
        """Sends a greeting"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_TopicLabelerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "Predict": grpc.unary_unary_rpc_method_handler(
            servicer.Predict,
            request_deserializer=nostradamus__pb2.TopicLabelRequest.FromString,
            response_serializer=nostradamus__pb2.TopicLabelReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("nostradamus.TopicLabeler", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class TopicLabeler(object):
    """The TopicLabeler service definition."""

    @staticmethod
    def Predict(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/nostradamus.TopicLabeler/Predict",
            nostradamus__pb2.TopicLabelRequest.SerializeToString,
            nostradamus__pb2.TopicLabelReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
